services:
  db:
    image: postgres:16-alpine
    container_name: ai-validator-postgres
    environment:
      POSTGRES_DB: ai_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
    ports:
    - 5432:5432
    volumes:
    - db-data:/var/lib/postgresql/data
  mongo:
    image: mongo:6
    container_name: ai-validator-mongo
    ports:
    - 27017:27017
    volumes:
    - mongo-data:/data/db
  report:
    build:
      context: ./apps/services/report-python
      dockerfile: Dockerfile
    container_name: ai-validator-report
    environment:
      PORT: '8000'
    working_dir: /app
    ports:
    - 3200:8000
    healthcheck:
      test:
      - CMD-SHELL
      - 'python - <<''PY''

        import socket; s=socket.socket(); s.settimeout(1); s.connect((''localhost'',
        8000)); print(''ok'')

        PY'
      interval: 10s
      timeout: 3s
      retries: 10
  api:
    build:
      context: ./apps/api
      dockerfile: Dockerfile
    container_name: ai-validator-api
    environment:
      PORT: '3000'
      WEB_ORIGIN: http://localhost:3000
      DATABASE_URL: postgres://user:pass@db:5432/ai_db
      MONGO_URL: mongodb://mongo:27017/pdfstore
      REPORT_SERVICE_URL: http://report:8000
    working_dir: /app
    ports:
    - 3100:3000
    depends_on:
    - db
    - mongo
    - report
    healthcheck:
      test:
      - CMD-SHELL
      - sh -lc 'nc -z localhost 3000'
      interval: 10s
      timeout: 3s
      retries: 10
    env_file:
    - .env
  web:
    build:
      context: ./apps/web
      dockerfile: Dockerfile
    container_name: ai-validator-web
    environment:
      PORT: '3000'
      NEXT_PUBLIC_API_BASE_URL: http://localhost:3100
      NEXT_PUBLIC_REPORT_BASE_URL: http://localhost:3200
    working_dir: /app
    ports:
    - 3000:3000
    depends_on:
    - api
    - report
    healthcheck:
      test:
      - CMD-SHELL
      - sh -lc 'nc -z localhost 3000'
      interval: 10s
      timeout: 3s
      retries: 10
    env_file:
    - .env
volumes:
  db-data: null
  mongo-data: null
